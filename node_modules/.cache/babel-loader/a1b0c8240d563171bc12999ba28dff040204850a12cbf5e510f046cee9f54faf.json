{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT J.S\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\nimport TopBar from './quest/TopBar';\nimport TextForm from './quest/TextForm';\nimport About from './quest/About';\nimport React, { useState } from 'react';\nimport Alert from './quest/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); //whether dark mode enabled or not.\n  const [alert, setAlert] = useState(null);\n  // const [redMode, setRedMode] = useState('light'); //whether red mode enabled or not.\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1395);\n  };\n  // const redMode = ()=> {\n  //   if(mode==='light') {\n  //     setMode('darkRed');\n  //     document.body.style.backgroundColor = '#290303';\n  //     showAlert(\"DarkRed Mode has been enabled.\", \"success\")\n  //   }\n  // }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled!\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled!\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter the text to analyze below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TopBar","TextForm","About","React","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/REACT J.S/textutils/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport TopBar from './quest/TopBar';\nimport TextForm from './quest/TextForm';\nimport About from './quest/About';\nimport React, { useState } from 'react';\nimport Alert from './quest/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode enabled or not.\n  const [alert, setAlert] = useState(null);\n  // const [redMode, setRedMode] = useState('light'); //whether red mode enabled or not.\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n        setAlert(null)\n    }, 1395);\n  }\n  // const redMode = ()=> {\n  //   if(mode==='light') {\n  //     setMode('darkRed');\n  //     document.body.style.backgroundColor = '#290303';\n  //     showAlert(\"DarkRed Mode has been enabled.\", \"success\")\n  //   }\n  // }\n  const toggleMode = ()=> { \n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled!\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled!\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n  <> \n  {/* <Router> */}\n    <TopBar title = \"TextUtils\" mode = {mode} toggleMode={toggleMode} />\n    <Alert alert = {alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          \n          <Route exact path=\"/\"> */}\n          <TextForm showAlert = {showAlert} heading = \"Enter the text to analyze below\" mode = {mode}/>\n          {/* </Route>\n        </Switch> */}\n    </div>\n  {/* </Router> */}\n  \n  </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,gBAAgB;AACnC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,eAAe;;AAEjC;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC;EACA,MAAMY,SAAS,GAAGA,CAACC,OAAO,EAACC,IAAI,KAAG;IAChCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACbL,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMM,UAAU,GAAGA,CAAA,KAAK;IACtB,IAAGT,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;MACnDM,QAAQ,CAACI,KAAK,GAAG,uBAAuB;IAC1C,CAAC,MACI;MACHb,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,8BAA8B,EAAE,SAAS,CAAC;MACpDM,QAAQ,CAACI,KAAK,GAAG,wBAAwB;IAC3C;EACF,CAAC;EACD,oBACAnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBAEEpB,OAAA,CAACP,MAAM;MAAC0B,KAAK,EAAG,WAAW;MAACd,IAAI,EAAIA,IAAK;MAACS,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpExB,OAAA,CAACF,KAAK;MAACS,KAAK,EAAIA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACxBxB,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,eAOzBpB,OAAA,CAACN,QAAQ;QAACe,SAAS,EAAIA,SAAU;QAACiB,OAAO,EAAG,iCAAiC;QAACrB,IAAI,EAAIA;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG9F,CAAC;EAAA,eAGN,CAAC;AAEL;AAACpB,EAAA,CAtDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}