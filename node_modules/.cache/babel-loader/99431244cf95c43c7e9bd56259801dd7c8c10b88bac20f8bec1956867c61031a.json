{"ast":null,"code":"// import logo from './logo.svg';\nimport'./App.css';import TopBar from'./quest/TopBar';import TextForm from'./quest/TextForm';import React,{useState}from'react';import Alert from'./quest/Alert';// import About from './quest/About';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState('light');//whether dark mode enabled or not.\nconst[alert,setAlert]=useState(null);const showAlert=(message,type)=>{setAlert({msg:message,type:type});setTimeout(()=>{setAlert(null);},1500);};const toggleMode=()=>{if(mode==='light'){setMode('dark');document.body.style.backgroundColor='#042743';showAlert(\"Dark mode has been enabled!\",\"success\");}else{setMode('light');document.body.style.backgroundColor='white';showAlert(\"Light mode has been enabled!\",\"success\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TopBar,{title:\"TextUtils\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Enter the text to analyze below\",mode:mode})})]});}export default App;","map":{"version":3,"names":["TopBar","TextForm","React","useState","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","className","heading"],"sources":["C:/REACT J.S/textutils/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport TopBar from './quest/TopBar';\nimport TextForm from './quest/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './quest/Alert';\n// import About from './quest/About';\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode enabled or not.\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n        setAlert(null)\n    }, 1500);\n  }\n  const toggleMode = ()=> {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled!\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled!\", \"success\");\n    }\n  }\n  return (\n  <> \n    <TopBar title = \"TextUtils\" mode = {mode} toggleMode={toggleMode} />\n    <Alert alert = {alert}/>\n    <div className=\"container my-3\">\n    {/* <About/> */}\n    <TextForm showAlert = {showAlert} heading = \"Enter the text to analyze below\" mode = {mode}/>\n    </div>\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA;AACA,MAAO,WAAW,CAClB,MAAO,CAAAA,MAAM,KAAM,gBAAgB,CACnC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,eAAe,CACjC;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,OAAO,CAAC,CAAE;AAC3C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAa,SAAS,CAAGA,CAACC,OAAO,CAACC,IAAI,GAAG,CAChCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,IAAM,CACbL,QAAQ,CAAC,IAAI,CAAC,CAClB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CACD,KAAM,CAAAM,UAAU,CAAGA,CAAA,GAAK,CACtB,GAAGT,IAAI,GAAK,OAAO,CAAC,CAClBC,OAAO,CAAC,MAAM,CAAC,CACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACrD,CAAC,IACI,CACHH,OAAO,CAAC,OAAO,CAAC,CAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,8BAA8B,CAAE,SAAS,CAAC,CACtD,CACF,CAAC,CACD,mBACAN,KAAA,CAAAF,SAAA,EAAAkB,QAAA,eACEpB,IAAA,CAACN,MAAM,EAAC2B,KAAK,CAAG,WAAW,CAACf,IAAI,CAAIA,IAAK,CAACS,UAAU,CAAEA,UAAW,CAAE,CAAC,cACpEf,IAAA,CAACF,KAAK,EAACU,KAAK,CAAIA,KAAM,CAAC,CAAC,cACxBR,IAAA,QAAKsB,SAAS,CAAC,gBAAgB,CAAAF,QAAA,cAE/BpB,IAAA,CAACL,QAAQ,EAACe,SAAS,CAAIA,SAAU,CAACa,OAAO,CAAG,iCAAiC,CAACjB,IAAI,CAAIA,IAAK,CAAC,CAAC,CACxF,CAAC,EACN,CAAC,CAEL,CAEA,cAAe,CAAAD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}