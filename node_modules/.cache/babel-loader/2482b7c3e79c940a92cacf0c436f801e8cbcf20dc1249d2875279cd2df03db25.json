{"ast":null,"code":"// import logo from './logo.svg';\nimport'./App.css';import TopBar from'./quest/TopBar';import TextForm from'./quest/TextForm';// import About from './quest/About';\nimport React,{useState}from'react';import Alert from'./quest/Alert';// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState('light');//whether dark mode enabled or not.\nconst[alert,setAlert]=useState(null);// const [redMode, setRedMode] = useState('light'); //whether red mode enabled or not.\nconst showAlert=(message,type)=>{setAlert({msg:message,type:type});setTimeout(()=>{setAlert(null);},1395);};// const redMode = ()=> {\n//   if(mode==='light') {\n//     setMode('darkRed');\n//     document.body.style.backgroundColor = '#290303';\n//     showAlert(\"DarkRed Mode has been enabled.\", \"success\")\n//   }\n// }\nconst toggleMode=()=>{if(mode==='light'){setMode('dark');document.body.style.backgroundColor='#042743';showAlert(\"Dark mode has been enabled!\",\"success\");document.title='TextUtils - Dark Mode';}else{setMode('light');document.body.style.backgroundColor='white';showAlert(\"Light mode has been enabled!\",\"success\");document.title='TextUtils - Light Mode';}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TopBar,{title:\"TextUtils\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Enter the text to analyze below\",mode:mode})})]});}export default App;","map":{"version":3,"names":["TopBar","TextForm","React","useState","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","className","heading"],"sources":["C:/REACT J.S/textutils/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport TopBar from './quest/TopBar';\nimport TextForm from './quest/TextForm';\n// import About from './quest/About';\nimport React, { useState } from 'react';\nimport Alert from './quest/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode enabled or not.\n  const [alert, setAlert] = useState(null);\n  // const [redMode, setRedMode] = useState('light'); //whether red mode enabled or not.\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n        setAlert(null)\n    }, 1395);\n  }\n  // const redMode = ()=> {\n  //   if(mode==='light') {\n  //     setMode('darkRed');\n  //     document.body.style.backgroundColor = '#290303';\n  //     showAlert(\"DarkRed Mode has been enabled.\", \"success\")\n  //   }\n  // }\n  const toggleMode = ()=> { \n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled!\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled!\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n  <> \n  {/* <Router> */}\n    <TopBar title = \"TextUtils\" mode = {mode} toggleMode={toggleMode} />\n    <Alert alert = {alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          \n          <Route exact path=\"/\"> */}\n          <TextForm showAlert = {showAlert} heading = \"Enter the text to analyze below\" mode = {mode}/>\n          {/* </Route>\n        </Switch> */}\n    </div>\n  {/* </Router> */}\n  \n  </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA;AACA,MAAO,WAAW,CAClB,MAAO,CAAAA,MAAM,KAAM,gBAAgB,CACnC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC;AACA,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,eAAe,CAEjC;AACA;AACA;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAIA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,OAAO,CAAC,CAAE;AAC3C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CACxC;AACA,KAAM,CAAAa,SAAS,CAAGA,CAACC,OAAO,CAACC,IAAI,GAAG,CAChCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,IAAM,CACbL,QAAQ,CAAC,IAAI,CAAC,CAClB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAM,CAAAM,UAAU,CAAGA,CAAA,GAAK,CACtB,GAAGT,IAAI,GAAK,OAAO,CAAC,CAClBC,OAAO,CAAC,MAAM,CAAC,CACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACnDM,QAAQ,CAACI,KAAK,CAAG,uBAAuB,CAC1C,CAAC,IACI,CACHb,OAAO,CAAC,OAAO,CAAC,CAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,8BAA8B,CAAE,SAAS,CAAC,CACpDM,QAAQ,CAACI,KAAK,CAAG,wBAAwB,CAC3C,CACF,CAAC,CACD,mBACAhB,KAAA,CAAAF,SAAA,EAAAmB,QAAA,eAEErB,IAAA,CAACN,MAAM,EAAC0B,KAAK,CAAG,WAAW,CAACd,IAAI,CAAIA,IAAK,CAACS,UAAU,CAAEA,UAAW,CAAE,CAAC,cACpEf,IAAA,CAACF,KAAK,EAACU,KAAK,CAAIA,KAAM,CAAC,CAAC,cACxBR,IAAA,QAAKsB,SAAS,CAAC,gBAAgB,CAAAD,QAAA,cAOzBrB,IAAA,CAACL,QAAQ,EAACe,SAAS,CAAIA,SAAU,CAACa,OAAO,CAAG,iCAAiC,CAACjB,IAAI,CAAIA,IAAK,CAAC,CAAC,CAG9F,CAAC,EAGN,CAAC,CAEL,CAEA,cAAe,CAAAD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}